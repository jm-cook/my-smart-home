views:
  - type: sections
    max_columns: 2
    theme: mush_nest_panel
    sections:
      - type: grid
        cards:
          - type: picture-elements
            image: https://fakeimg.pl/400x200/ffffff,0/000/?text=%20
            elements:
              - type: state-label
                entity: sensor.time
                style:
                  left: 50%
                  top: 60%
                  font-size: 1100%
                  font-weight: 550
              - type: state-label
                entity: sensor.current_date
                style:
                  left: 50%
                  top: 20%
                  font-size: 200%
                  font-weight: 500
                  color: grey
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
            layout_options:
              grid_columns: 4
              grid_rows: 4
      - type: grid
        cards:
          - type: custom:chartjs-card
            layout_options:
              grid_columns: 4
              grid_rows: 4
            card_mod:
              style: |
                ha-card {
                  height: 100%;
                  box-shadow: var(--ha-card-box-shadow,none) !important;
                }
            chart: line
            data:
              datasets:
                - backgroundColor: rgb(65,105,225)
                  borderWidth: 10
                  fill: true
                  cubicInterpolationMode: monotone
                  data: >-
                    ${states['sensor.nowcast'].attributes.forecast.map(fcast =>
                    ({x: (new Date(fcast.datetime).getTime()-new
                    Date().getTime()), y: parseFloat(fcast.precipitation)}))}
              blabels: ${30}
              labels: >-
                ${states['sensor.nowcast'].attributes.forecast.map(fcast =>
                5*Math.floor((new Date(fcast.datetime).getTime()-new
                Date().getTime())/(5000*60)))}
            entity_row: true
            custom_options:
              showLegend: false
            options:
              elements:
                point:
                  radius: 0
              scales:
                x:
                  max: 90
                  min: 0
                  display: true
                  color: red
                  ticks:
                    callback: >-
                      ${(function (val, index) {   var lval =
                      parseInt(this.getLabelForValue(val));  if (lval == 0) {
                      return 'Now';} else { return  lval % 30 === 0?lval:'';}  
                      })}
                    font:
                      size: 18
                'y':
                  beginAtZero: true
                  display: true
                  position: right
                  grid:
                    color: >-
                      ${(function(context) {return context.tick.value%1
                      ===0?'#aaaaaa':'#000000';})}
                  ticks:
                    callback: >-
                      ${(function(val, index) { var lval =
                      this.getLabelForValue(val); var ival = Math.round(lval);
                      return lval % 1 === 0 ? ival : '';})}
                    font:
                      size: 18
                  max: 3
              plugins:
                title:
                  display: true
                  font:
                    size: 18
                  text: ${states['sensor.nowcast'].state;}
