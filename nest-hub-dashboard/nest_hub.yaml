views:
  - type: sections
    max_columns: 2
    theme: mush_nest_panel
    cards: []
    title: Nest
    path: nest-dashboard
    icon: mdi:home
    sections:
      - type: grid
        cards:
          - type: picture-elements
            image: https://fakeimg.pl/400x200/ffffff,0/000/?text=%20
            elements:
              - type: state-label
                entity: sensor.time
                style:
                  left: 50%
                  top: 60%
                  font-size: 1100%
                  font-weight: 550
              - type: state-label
                entity: sensor.current_date
                style:
                  left: 50%
                  top: 20%
                  font-size: 200%
                  font-weight: 500
                  color: grey
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
            grid_options:
              columns: full
      - type: grid
        cards:
          - type: custom:chartjs-card
            layout_options:
              grid_columns: 4
              grid_rows: 4
            card_mod:
              style: |
                ha-card {
                  height: 100%;
                  box-shadow: var(--ha-card-box-shadow,none) !important;
                }
            chart: line
            data:
              datasets:
                - backgroundColor: rgb(65,105,225)
                  borderWidth: 10
                  fill: true
                  cubicInterpolationMode: monotone
                  data: >-
                    ${states['sensor.nowcast'].attributes.forecast.map(fcast =>
                    ({x: (new Date(fcast.datetime).getTime()-new
                    Date().getTime()), y: parseFloat(fcast.precipitation)}))}
              blabels: ${30}
              labels: >-
                ${states['sensor.nowcast'].attributes.forecast.map(fcast =>
                5*Math.floor((new Date(fcast.datetime).getTime()-new
                Date().getTime())/(5000*60)))}
            entity_row: true
            custom_options:
              showLegend: false
            options:
              elements:
                point:
                  radius: 0
              scales:
                x:
                  max: 90
                  min: 0
                  display: true
                  color: red
                  ticks:
                    callback: >-
                      ${(function (val, index) {   var lval =
                      parseInt(this.getLabelForValue(val));  if (lval == 0) {
                      return 'Now';} else { return  lval % 30 === 0?lval:'';}  
                      })}
                    font:
                      size: 18
                'y':
                  beginAtZero: true
                  display: true
                  position: right
                  grid:
                    color: >-
                      ${(function(context) {return context.tick.value%1
                      ===0?'#aaaaaa':'#000000';})}
                  ticks:
                    callback: >-
                      ${(function(val, index) { var lval =
                      this.getLabelForValue(val); var ival = Math.round(lval);
                      return lval % 1 === 0 ? ival : '';})}
                    font:
                      size: 18
                  max: 3
              plugins:
                title:
                  display: true
                  font:
                    size: 18
                  text: ${states['sensor.nowcast'].state;}
      - type: grid
        cards:
          - type: custom:mushroom-entity-card
            entity: sensor.indoor_temperature
            name: Livingroom
            fill_container: true
            layout_options:
              grid_rows: 2
              grid_columns: 2
            layout: vertical
          - type: custom:mushroom-entity-card
            name: Bedroom
            entity: sensor.bedroom_temperature
            fill_container: true
            layout_options:
              grid_rows: 2
              grid_columns: 2
            layout: vertical
          - type: custom:mushroom-entity-card
            entity: sensor.outdoor_temperature
            name: Outdoor
            fill_container: true
            layout_options:
              grid_rows: 2
              grid_columns: 2
            layout: vertical
          - type: vertical-stack
            cards:
              - type: custom:mushroom-template-card
                icon: mdi:fan
                entity: climate.flexit_nordic
                tap_action:
                  action: more-info
                icon_color: >-
                  {% if (state_attr('climate.flexit_nordic', 'preset_mode' )  ==
                  'home') -%} 
                    var(--rgb-state-climate-heat-cool)
                  {%- elif (state_attr('climate.flexit_nordic', 'preset_mode' )
                  == 'boost') -%} 
                    var(--rgb-state-climate-heat)
                  {%- else -%}
                    var(--rgb-state-climate-idle)
                  {%- endif %}
                primary: >-
                  Ventilation {{ (state_attr('climate.flexit_nordic',
                  'temperature') | float ) }} Â°C
                secondary: >-
                  {{ state_attr('climate.flexit_nordic', 'preset_mode'
                  ).capitalize() }}
              - type: custom:mushroom-chips-card
                alignment: center
                chips:
                  - type: template
                    icon: mdi:fan-plus
                    entity: input_boolean.air_control_auto
                    content: 'Auto fan: {{ states(''input_boolean.air_control_auto'') }}'
            layout_options:
              grid_columns: 2
              grid_rows: 2
          - type: custom:mushroom-entity-card
            entity: sensor.indoor_humidity
            name: Indoor Humidity
            fill_container: true
            layout_options:
              grid_rows: 2
              grid_columns: 2
            layout: vertical
          - type: custom:mushroom-template-card
            entity: sensor.indoor_co2
            primary: Carbon Dioxide
            secondary: '{{states(''sensor.indoor_co2'')}}'
            icon: mdi:molecule-co2
            fill_container: true
            layout: vertical
            icon_color: var(--rgb-state-entity)
            tap_action:
              action: more-info
          - type: custom:mushroom-entity-card
            entity: sensor.outdoor_humidity
            name: Outdoor Humidity
            fill_container: true
            layout_options:
              grid_rows: 2
              grid_columns: 2
            layout: vertical
          - type: custom:mushroom-entity-card
            fill_container: true
            name: Finished in
            secondary_info: state
            entity: sensor.dishwasher_remaining
            layout_options:
              grid_columns: 2
              grid_rows: 2
            visibility:
              - condition: state
                entity: sensor.dishwasher_remaining_program_time
                state_not: unavailable
            layout: vertical
          - type: gauge
            entity: sensor.kaifa_active_power_import
            min: 0
            max: 9000
            needle: true
            segments:
              - from: 0
                color: var(--success-color)
              - from: 3000
                color: var(--warning-color)
              - from: 6000
                color: var(--error-color)
            name: ' '
            visibility:
              - condition: state
                entity: sensor.dishwasher_remaining_program_time
                state: unavailable
            layout_options:
              grid_columns: 2
              grid_rows: 2
        column_span: 2
